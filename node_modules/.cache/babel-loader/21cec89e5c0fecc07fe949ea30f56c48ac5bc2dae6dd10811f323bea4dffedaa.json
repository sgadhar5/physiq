{"ast":null,"code":"var _jsxFileName = \"/Users/succhaygadhar/Downloads/physiq/src/components/PhysicalExamModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./../styles/physicalexam.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PhysicalExam({\n  setPhysicalExamText\n}) {\n  _s();\n  const [exam, setExam] = useState({\n    general: false,\n    head: false,\n    cardiovascular: false,\n    pulmonary: false,\n    abdominal: false,\n    neurological: false,\n    extremities: false\n  });\n  const generateExamNote = () => {\n    let examText = \"Physical Exam:\\n\";\n    if (exam.general) examText += \"- Patient appears well-nourished, no acute distress.\\n\";\n    if (exam.head) examText += \"- Head: Normocephalic, atraumatic.\\n\";\n    if (exam.cardiovascular) examText += \"- Cardiovascular: Regular rate and rhythm, no murmurs.\\n\";\n    if (exam.pulmonary) examText += \"- Pulmonary: Clear to auscultation bilaterally, no wheezing or crackles.\\n\";\n    if (exam.abdominal) examText += \"- Abdominal: Soft, non-tender, no masses or organomegaly.\\n\";\n    if (exam.neurological) examText += \"- Neurological: Alert, oriented, cranial nerves intact.\\n\";\n    if (exam.extremities) examText += \"- Extremities: No edema, normal capillary refill.\\n\";\n    setPhysicalExamText(examText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"exam-sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Physical Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-checklist\",\n      children: Object.keys(exam).map(key => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: exam[key],\n          onChange: () => {\n            setExam({\n              ...exam,\n              [key]: !exam[key]\n            });\n            generateExamNote();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), key.charAt(0).toUpperCase() + key.slice(1)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(PhysicalExam, \"XCZPhORgajNfhTUode403fYRr8M=\");\n_c = PhysicalExam;\nexport default PhysicalExam;\nvar _c;\n$RefreshReg$(_c, \"PhysicalExam\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PhysicalExam","setPhysicalExamText","_s","exam","setExam","general","head","cardiovascular","pulmonary","abdominal","neurological","extremities","generateExamNote","examText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","type","checked","onChange","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/Users/succhaygadhar/Downloads/physiq/src/components/PhysicalExamModal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./../styles/physicalexam.css\";\n\nfunction PhysicalExam({ setPhysicalExamText }) {\n  const [exam, setExam] = useState({\n    general: false,\n    head: false,\n    cardiovascular: false,\n    pulmonary: false,\n    abdominal: false,\n    neurological: false,\n    extremities: false,\n  });\n\n  const generateExamNote = () => {\n    let examText = \"Physical Exam:\\n\";\n    if (exam.general) examText += \"- Patient appears well-nourished, no acute distress.\\n\";\n    if (exam.head) examText += \"- Head: Normocephalic, atraumatic.\\n\";\n    if (exam.cardiovascular) examText += \"- Cardiovascular: Regular rate and rhythm, no murmurs.\\n\";\n    if (exam.pulmonary) examText += \"- Pulmonary: Clear to auscultation bilaterally, no wheezing or crackles.\\n\";\n    if (exam.abdominal) examText += \"- Abdominal: Soft, non-tender, no masses or organomegaly.\\n\";\n    if (exam.neurological) examText += \"- Neurological: Alert, oriented, cranial nerves intact.\\n\";\n    if (exam.extremities) examText += \"- Extremities: No edema, normal capillary refill.\\n\";\n\n    setPhysicalExamText(examText);\n  };\n\n  return (\n    <aside className=\"exam-sidebar\">\n      <h2>Physical Exam</h2>\n      <div className=\"exam-checklist\">\n        {Object.keys(exam).map((key) => (\n          <label key={key}>\n            <input\n              type=\"checkbox\"\n              checked={exam[key]}\n              onChange={() => {\n                setExam({ ...exam, [key]: !exam[key] });\n                generateExamNote();\n              }}\n            />\n            {key.charAt(0).toUpperCase() + key.slice(1)}\n          </label>\n        ))}\n      </div>\n    </aside>\n  );\n}\n\nexport default PhysicalExam;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,YAAYA,CAAC;EAAEC;AAAoB,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,OAAO,EAAE,KAAK;IACdC,IAAI,EAAE,KAAK;IACXC,cAAc,EAAE,KAAK;IACrBC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAE,KAAK;IACnBC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,QAAQ,GAAG,kBAAkB;IACjC,IAAIV,IAAI,CAACE,OAAO,EAAEQ,QAAQ,IAAI,wDAAwD;IACtF,IAAIV,IAAI,CAACG,IAAI,EAAEO,QAAQ,IAAI,sCAAsC;IACjE,IAAIV,IAAI,CAACI,cAAc,EAAEM,QAAQ,IAAI,0DAA0D;IAC/F,IAAIV,IAAI,CAACK,SAAS,EAAEK,QAAQ,IAAI,4EAA4E;IAC5G,IAAIV,IAAI,CAACM,SAAS,EAAEI,QAAQ,IAAI,6DAA6D;IAC7F,IAAIV,IAAI,CAACO,YAAY,EAAEG,QAAQ,IAAI,2DAA2D;IAC9F,IAAIV,IAAI,CAACQ,WAAW,EAAEE,QAAQ,IAAI,qDAAqD;IAEvFZ,mBAAmB,CAACY,QAAQ,CAAC;EAC/B,CAAC;EAED,oBACEd,OAAA;IAAOe,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BK,MAAM,CAACC,IAAI,CAAClB,IAAI,CAAC,CAACmB,GAAG,CAAEC,GAAG,iBACzBxB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UACEyB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEtB,IAAI,CAACoB,GAAG,CAAE;UACnBG,QAAQ,EAAEA,CAAA,KAAM;YACdtB,OAAO,CAAC;cAAE,GAAGD,IAAI;cAAE,CAACoB,GAAG,GAAG,CAACpB,IAAI,CAACoB,GAAG;YAAE,CAAC,CAAC;YACvCX,gBAAgB,CAAC,CAAC;UACpB;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EACDI,GAAG,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGL,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC;MAAA,GATjCN,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUR,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ;AAACjB,EAAA,CA5CQF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA8CrB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}